;; State type
(declare-state-type state_type (
  (x Real) 
  (y Real)
))

;; Initial states 
(define-states initial_states state_type) 
  ;; Implicit variable state
  (and 
    (< state.x 1)
    (> state.x (- 1))
    (< state.y 1)
    (> state.y (- 1))
  )
)

;; One transition 
(define-transition transition state_type
  ;; Implicit variables next, state
  (and 
    (= next.x (+ (* (/ 3 5) state.x) (* (/ 2 5) state.y)))
    (< next.y 1)
    (> next.y (- 1))
  )  
)

;; The system
(define-transition-system T 
  state_type
  initial_states
  (transition)
)

;; Query
(query T 
  (and 
    (< T.x 1) 
    (> T.x (- 1))
  )
)

