;;
;; Make an array:
;;
;; 0 1 2 3 4
;; 1 2 3 4 5
;; 2 3 4 5 6
;; 3 4 5 6 7
;; 4 5 6 7 8
;; 

(define-state-type state_type (
  (x Int)
  (y Int)  
  (a (Array Int (Array Int Int)))
))

(define-states initial_states state_type
  (and 
    (= x 0)
    (= y 0)
  )
)

(define-transition transition state_type
  (and 
    (=> (> state.x 4) 
      (and
       (= next.x 0)
       (= next.y (+ state.y 1))
       (= next.a state.a)
      )
    )
    (=> (<= state.x 4)
      (and
        (= next.x (+ state.x 1))
        (= next.y state.y)
        (= next.a 
          (store state.a state.x
            (store (select state.a state.x) state.y
              (+ state.x state.y)
            )
          )
        )
      )
    )
  )
)

(define-transition-system T 
  state_type
  initial_states
  transition
)

(query T (<= y 4))

