germanish: CONTEXT =
BEGIN
  PR: TYPE = PROCESS_TYPE;
  MSG : TYPE = {Empty, ReqShared, ReqExclusive};
  STATE : TYPE = {Invalid, Shared, Exclusive};

  germanish: MODULE =
  BEGIN
    OUTPUT
      cache: ARRAY PR OF STATE,
      shrset: ARRAY PR OF BOOLEAN,
      exclusivity_granted : BOOLEAN,
      current_command : MSG,
      current_process : PR
    INPUT
      i : PR
      
    INITIALIZATION
      cache IN {c : ARRAY PR OF STATE | FORALL (i : PR) : c[i] = Invalid};
      shrset IN {s : ARRAY PR OF BOOLEAN | FORALL (i : PR) : NOT s[i]};
      exclusivity_granted = FALSE;
      current_command = Empty;

    TRANSITION
    [
      current_command = Empty AND cache[i] = Invalid -->
        current_command' = ReqShared;
        current_process' = i;
    []
      current_command = Empty AND cache[i] /= Exclusive -->
        current_command' = ReqExclusive;
        current_process' = i;
    ]
  END;
  safe : LEMMA
    germanish |- G(FORALL (i, j : PR) : (i /= j AND cache[i] = Exclusive => cache[j] = Invalid));
END
